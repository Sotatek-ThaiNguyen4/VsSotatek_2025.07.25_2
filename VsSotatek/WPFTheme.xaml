<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style TargetType="Button">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="DimGray"/>
        <Setter Property="BorderBrush" Value="DimGray"/>
        <Setter Property="BorderThickness" Value="10"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox>
                        <TextBlock Text="{Binding}" Foreground="White"/>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>                
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}">
                        <Grid>                            
                            <Rectangle StrokeLineJoin="Round" StrokeThickness="1" Stroke="{TemplateBinding BorderBrush}" BitmapEffect="{TemplateBinding BitmapEffect}" x:Name="rectangle"/>                            
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>                  
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Gray"/>
                            <Setter Property="Background" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="DimGray"/>
        <Setter Property="BorderBrush" Value="DimGray"/>
        <Setter Property="BorderThickness" Value="10"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox>
                        <TextBlock Text="{Binding}" Foreground="White"/>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
                    </ControlTemplate.Resources>
                    <Border CornerRadius="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <Rectangle StrokeLineJoin="Round" StrokeThickness="1" Stroke="{TemplateBinding BorderBrush}" BitmapEffect="{TemplateBinding BitmapEffect}"/>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter Property="Background" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".8"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="JudgeButton" TargetType="ToggleButton">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="DimGray"/>
        <Setter Property="BorderBrush" Value="DimGray"/>
        <Setter Property="BorderThickness" Value="10"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox>
                        <TextBlock Text="{Binding}" Foreground="White"/>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
                    </ControlTemplate.Resources>
                    <Border CornerRadius="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <Rectangle StrokeLineJoin="Round" StrokeThickness="1" Stroke="{TemplateBinding BorderBrush}" BitmapEffect="{TemplateBinding BitmapEffect}"/>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter Property="Background" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".8"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="Green"/>
                            <Setter Property="BorderBrush" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="Red"/>
                            <Setter Property="BorderBrush" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="RadioButton">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="10"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox>
                        <TextBlock Text="{Binding}" Foreground="White"/>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
                    </ControlTemplate.Resources>

                    <Border CornerRadius="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <Rectangle StrokeLineJoin="Round" StrokeThickness="1" Stroke="{TemplateBinding BorderBrush}" BitmapEffect="{TemplateBinding BitmapEffect}"/>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter Property="Background" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".8"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Background" Value="DimGray"/>
        <Setter Property="BorderBrush" Value="DimGray"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox HorizontalAlignment="Stretch">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding}" Grid.Column="0" Foreground="Black" HorizontalAlignment="Center"/>
                        </Grid>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Label">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Background" Value="#FF8DA3C5"/>
        <Setter Property="BorderBrush" Value="#FF8DA3C5"/>
    </Style>
    
    <Style x:Key="SVLLabel" TargetType="Label">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Background" Value="#FF8DA3C5"/>
        <Setter Property="BorderBrush" Value="#FF8DA3C5"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox>
                        <TextBlock Text="{Binding}" Foreground="White" Margin="0"/>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>    

    <Style TargetType="GroupBox">
        <Setter Property="Padding" Value="2" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#FF8DA3C5"/>
        <Setter Property="BorderBrush" Value="#FF8DA3C5"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid x:Name="GroupBoxRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Background="#FF8DA3C5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ContentPresenter Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="White" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </Style>
                                </ContentPresenter.Resources>
                                <ContentPresenter.Content>
                                    <Binding Path="Header" RelativeSource="{RelativeSource TemplatedParent}" />
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Border>
                        <Border Grid.Row="1" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1">
                            <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Cursor="{TemplateBinding Cursor}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Margin" Value="1"/>
    </Style>

    <Style TargetType="ListBoxItem">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Blue"/>
                <Setter Property="FontWeight" Value="ExtraBold"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListViewItem">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Blue"/>
                <Setter Property="FontWeight" Value="ExtraBold"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="Margin" Value="1"/>
    </Style>
    
    <Style TargetType="Border">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Background" Value="DimGray"/>
    </Style>    
</ResourceDictionary>